---
- name: Get architecture for docker.list file by running "dpkg --print-architecture"
  register: arch_result
  changed_when: arch_result.rc != 0
  ansible.builtin.command:
    cmd: dpkg --print-architecture

- name: Set custom fact for architecture
  ansible.builtin.set_fact:
    arch: "{{ arch_result.stdout }}"

- name: Install ca-certificates, curl, gnupg
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: present

- name: Create /etc/apt/keyrings
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Add docker gpg key to /etc/apt/keyrings
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    keyring: /etc/apt/keyrings/docker.gpg

- name: Give all users read permissions to docker gpg key
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.gpg
    mode: '0644'
    owner: root
    group: root

- name: Save docker.list template to /etc/apt/sources.list.d/docker.list
  ansible.builtin.template:
    src: docker-ubuntu.list.j2
    dest: /etc/apt/sources.list.d/docker.list
    mode: '0644'
    owner: root
    group: root

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Enable Docker to start on boot
  ansible.builtin.systemd:
    name: docker.service
    enabled: true
    state: started

- name: Enable containerd to start on boot
  ansible.builtin.systemd:
    name: containerd.service
    enabled: true
    state: started
